{
  "title": "NST",
  "caption": "<img src=\"logo.png\" width=\"50%\"/>",
  "intro": "NST is a tool for writing novels, short stories, poems and other forms of text in a way that events can depend on the reader's decisions. <br><br>Events can contain interdependencies such as: <br><br>A can happen if B has already happened. <br> A can happen if B can happen. <br> A can happen if B could ever have happend. <br> A can happen if B is happening at the moment.  <br><br><a class=\"anchorButton\" href=\"https://www.najjak.com/nst/NST.zip\">Download üì•</a><a class=\"anchorButton\" href=\"#guide\">Guide ü¶Æ</a><br><div class=\"note\">Minimum requirements:<br>Operating system: <b> Windows 10 (x64) </b><br> Graphics card: <b> Intel HD Graphics </b> <br> Processor: <b> Intel Core i3-530 </b> <br > RAM memory: <b> 80 Mb </b> <br> Disk memory: <b> 20 Mb </b> <br> Software: <b> DirectX 11 </b> and <a class=\" anchorButton compact\" href=\"https://aka.ms/vs/16/release/vc_redist.x64.exe\"> Microsoft Visual C ++ Redistributable üì• </a> <br> (already installed on most systems) </div><div class=\"note\">Using the tool in a creative way? Send me a screenshot, video or * .nts and * .chr files! </div><div class=\"notice\">NST currently is in ALPHA testing phase, which means that usage problems may occur. If you have a suggestion for improvement or a problem contact me on the links below. </div><div class=\"note\">My name is Martin and you can find me on <a class=\"anchorButton compact\" href=\"mailto:deeeeelay@gmail.com\">e-mail</a> or <a class=\"anchorButton compact\" href=\"https://www.instagram.com/najnajjak/\">instagram</a> or <a class=\"anchorButton compact\"  href=\"https://discord.gg/sxeD79nuBP\">discord</a></div>",
  "guideTitle": "ü¶Æ Guide",
  "filterTitle": "Search...",
  "sections": {
    "section-howitworks": {
      "caption": "‚öôÔ∏è How NST works?",
	  "anchor": "how-nst-works",
      "content": "Each event in the real world leads to a new state of reality, and NST is a tool that allows writers to make such connections between events and states. <br><br> An example of a state is \"Michael talks to Jane\" which depends on the state \"Michael meets Jane\". When Michael meets Jane then Michael knows about the existence of Jane and can talk to her. But Michael can also decide to meet George instead of Jane, therefore losing the chance to talk to Jane thus losing the chance to learn some vital information from Jane. <br> <br> NST is a tool that allows you to make connections between states therefore making the experience for each reader different based on his/hers decisions. <br> <br> The main components of NST are stories, characters and states. Through dialogue with a character, the situation in which the reader of the story finds himself changes."
    },
    "section-wheretostart": {
      "caption": "1Ô∏è Where to start?",
	  "anchor": "where-to-start",
      "content": "NST can be downloaded <a class=\"anchorButton\" href=\"https://www.najjak.com/nst/NST.zip\">HERE üì•</a> <br><br>Once you download <b> NST.zip </b> you can unzip it anywhere on your disk. To start the editor, double-click <b> NSTEditor.exe </b>. When you first start the editor, a window like the one in the picture should appear.<br><br> <img src=\"screenshots/startup_en.png\">"
    },
	"section-creatingstories": {
      "caption": "üìú Stories",
	  "anchor": "stories",
      "content": "The story is the basic component of NST. It contains the characters and states. <br> <br> Clicking on the <div class=\"menuPath\"> File ‚Üí New </div> menu item creates a new story that automatically gets a unique name. <br> <br> The name of the story can be changed by saving it via <div class =\"menuPath\"> File ‚Üí Save As ‚Üí (new name) ‚Üí Confirm </div>. <br> <br>A saved story can be loaded via the <div menu class=\"menuPath\"> Load ‚Üí (name) </div> menu item. In the upper left corner is the name of the currently loaded story. "
    },
	"section-creatingcharacters": {
      "caption": "üßî Characters",
	  "anchor": "characters",
      "content": "A character is anyone with whom you as a reader can interact in the story. <br> <br> The tool for creating characters opens through the menu item <div class=\"menuPath\">Window ‚Üí Character Editor</div>. The character editor looks like the screenshot below.<br><br> <img src=\"screenshots/charEditor_en.png\" /><br><br>A new character is created via the <div class=\"menuPath\">Character ‚Üí New</div> menu item in the Character Editor. The list of characters appears below the field <div class=\"menuPath\">Filter characters</div> and each character can be selected with a click on the characters' name.<br><br> For each character the name and description of that character can be changed, while the field  <div class=\"menuPath\">Relationship</div> reflects the current relationship that character has with the reader. The relationship can be positive (maximum 100) or negative (minimum 0). Whether something can happen can also depend on the relationship the reader has with that character. <br> <br> Once all the changes to the character have been made, you must choose <div class=\"menuPath\">Character ‚Üí Update</div> to reflect the changes made across the whole story.<div class=\"notice\">Updating the character will change the attributes of the character throughout the story, but will not save the story itself. To save you must click on <div class=\"menuPath\">File ‚Üí Save</div>.</div><div class=\"notice\">Selecting another character will automatically update the currently selected character. </div><div class=\"note\">All complex text fields are recommended to be edited with the free text editor <a href=\"https://github.com/notepad-plus-plus/notepad-plus-plus/releases/download/v7.9.5/npp.7.9.5.Installer.exe\" class=\"anchorButton compact\">Notepad++</a>, but can also be edited with <a href=\"https://www.microsoft.com/en-us/microsoft-365/word\" class=\"anchorButton compact\">MS Word</a> or with <a href=\"https://download.sublimetext.com/Sublime%20Text%20Build%203211%20x64%20Setup.exe\" class=\"anchorButton compact\">Sublime Text 3</a>. </div>"
    },
	"section-creatingstates": {
      "caption": "‚öôÔ∏è States",
	  "anchor": "states",
      "content": "A state is a moment in time.<br><br> Every state has a character to whom that state refers. For example, if you are talking to Jane then that state refers to the character Jane. Each state may depend on other states or relationships with characters in different ways that will be discussed further down this guide. <br><br>All available system conditions can be viewed in a window named <div class=\"menuPath\">States List</div> which can be shown or hidden by clicking on <div class=\"menuPath\">Window ‚Üí States List</div>. The window looks like the screenshot below.<br><br><img src=\"screenshots/statesList_en.png\" /><br><br>A new state in the system can be added by clicking on <div class=\"menuPath\">Create ‚Üí New StateDialog</div>. This click will create a new state in the story of type dialog. Clicking on the state rectangle will select the state. <br> <br> The properties of each state can be seen in a window called <div class=\"menuPath\">State Editor</div> which can be shown or hidden with a click on  <div class=\"menuPath\">Window ‚Üí State Editor</div>. The window looks like the screenshot below.<br><br><img src=\"screenshots/stateEditor_en.png\" /><br><br>Each state has the following properties:<br><br><div class=\"menuPath\">Name</div>: Unique name of the state that the writer uses to identify the state. It is used only inside the editor.<br><div class=\"menuPath\">Can Happen Again</div>: If the field is checked then this state can occur more than once, otherwise if the state ever occurs it is not possible for it to occur again later even if all conditions are met. <br><div class=\"menuPath\">Availability Expression</div>: Here the writer specifies the <a class=\"anchorButton compact\" href=\"#availability-expressions\" id=\"state-condition-availability\">availability expressions</a> (when can this state happen) for the selected state.<br><div class=\"menuPath\">Links to states that the currently selected state depends on</div>:Below the availability expresseion are links to the states contained in the availability expression.<br><div class=\"menuPath\">Situation</div>: The text that is displayed after this state is activated and becomes the current state of the story.<br><div class=\"note\">On the buttons listed after <div class=\"menuPath\">Edit with</div> the text from the field can be opened in an external editor in a special file that NST can read after it is saved. Once the changes have been made with the external editor, a simple save will update the changes in the NST editor.</div><br><div class=\"menuPath\">Preview</div>: What the text you enter will look like.<br><div class=\"menuPath\">Dialog Statement</div>: Which dialog if chosen will lead to this state of the story.<br><div class=\"menuPath\">Character</div>: To which character this state refers to. When this state happens <div class=\"menuPath\">Effect on Relationship</div> will be applied to the character.<br><div class=\"menuPath\">Effect on Relationship</div>: Is expressed in %. For example, -50% will mean that if this state occurs then the reader will receive a negative reaction from the character to whom this state refers. <br><div class=\"menuPath\">Relationship Threshold</div>: Expressed in %, can be both positive and negative. A positive value means that in order for this state to occur, the relationship with the character to whom it refers must be greater than the value. Negative value means that in order for this state to occur the relationship with the character to whom it refers should be less than the value. <br> <br> Once all the parameters have been set, the state in the story is updated by clicking on <div class=\"menuPath\">State ‚Üí Update</div>. <div class=\"notice\">Updating the state will change the attributes of the state throughout the story, but will not save the story. You must click on <div class=\"menuPath\">File ‚Üí Save</div> in order to save the story.</div> <div class=\"notice\">Selecting another state will automatically update the currently selected state.</div>Right-clicking on a state in any window will open a context menu that looks like the screenshot below .<br><br><img src=\"screenshots/stateContextMenu_en.png\"/><br><br><div class=\"menuPath\">Select</div>: Will select the state.<br><div class=\"menuPath\">Try Activate</div>: The system will try to activate the state. If the state is available then it will be activated, if it is not available then it cannot be activated. <br><div class=\"menuPath\">Force Activation</div>: The system will activate the state regardless of whether it is available.<br><div class=\"menuPath\">Set Entry Here</div>: This state will be the initial state and the story will begin here.<br><div class=\"menuPath\">Reset</div>: The state will get its initial parameters regardless of the current state of the story. <br><div class=\"menuPath\">Delete</div>: The state will be deleted.<div class=\"notice\">Deleting a state cannot be undone with Undo in the current version.</div><div class=\"note\">The story will start from the beginning with a click on <div class=\"menuPath\">System ‚Üí Reset</div>. This will reset all states and will set the currently active state to the entry state. </div><div class=\"note\">All complex text fields are recommended to be edited with the free text editor <a href=\"https://github.com/notepad-plus-plus/notepad-plus-plus/releases/download/v7.9.5/npp.7.9.5.Installer.exe\" class=\"anchorButton compact\">Notepad++</a>, but can also be edited with <a href=\"https://www.microsoft.com/en-us/microsoft-365/word\" class=\"anchorButton compact\">MS Word</a> or with <a href=\"https://download.sublimetext.com/Sublime%20Text%20Build%203211%20x64%20Setup.exe\" class=\"anchorButton compact\">Sublime Text 3</a>.</div>"
    },
	"section-availabilityexpressions": {
      "caption": "üî£ Availability Expressions",
	  "anchor": "availability-expressions",
      "content": "Availability expressions are simple (or could also be complex) expressions that define the dependence of the current state on other states in the story. <br> <br> For example, there would be a connection between the states \"Michael talks to Jane\" and \"Michael meets Jane\". The state \"Michael talks to Jane\" could happen only if the state \"Michael meets Jane\" has already happened. In this case we would create two states and in the availability expression of the state \"Michael talks to Jane\" we would define that \"Michael meets Jane\" must have happened. <br> <br> If the names of the states are MichaelTalksToJane and MichaelMeetsJane then the availability expression for the state named MichaelTalksToJane would contain <div class=\"script\"><span class=\"highlight\">HAS_HAPPENED</span> MichaelMeetsJane</div><div class=\"note\">All states have an availability expression except the entry state because it does not depend on any other state. The availability expression is located on the <a class=\"anchorButton compact\" href=\"#state-condition-availability\">third position</a> in the parameter list of the state.</div>Each state can provide the following attributes:<br><br><div class=\"script\"><span class=\"highlight\">HAS_HAPPENED</span> StateName</div> : StateName has happened.<br><div class=\"script\"><span class=\"highlight\">CAN_HAPPEN</span> StateName</div> : StateName can happen.<br><div class=\"script\"><span class=\"highlight\">COULD_EVER_HAVE_HAPPENED</span> StateName</div> :StateName could ever have happened.<br><div class=\"script\"><span class=\"highlight\">IS_HAPPENING</span> StateName</div> : StateName is currently happening or StateName is the currently active state.<br><br>Two or more expressions can be combined with the operators:<br><br><div class=\"script\">(<span class=\"highlight\">CAN_HAPPEN</span> StateName1) <span class=\"highlightBlue\">OR</span> (<span class=\"highlight\">IS_HAPPENING</span> StateName2)</div> : Is interpreted as \"If StateName1 can happen <b>OR</b> StateName2 is happening, then this state can happen\".<br><br><div class=\"script\">(<span class=\"highlight\">CAN_HAPPEN</span> StateName1) <span class=\"highlightBlue\">AND</span> (<span class=\"highlight\">IS_HAPPENING</span> StateName2)</div> : Is interpreted as ‚ÄûIf StateName1 can happen <b>AND</b> StateName2 is happening, then this state can happen‚Äú.<br><br><div class=\"script\"><span class=\"highlightBlue\">NOT</span> (<span class=\"highlight\">IS_HAPPENING</span> StateName1)</div> : Is interpreted as \"If StateName1 is not happening, then this state can happen\".<div class=\"note\">Each internal expression must be separated by parentheses as in the examples above.</div><div class=\"note\">Right-clicking on the Availability Expression input field opens a context menu with buttons for each attribute, operator, and state. Clicking on them automatically adds them to the availability expression. </div><div class=\"note\">Errors in availability expressions can be viewed in <div class=\"menuPath\">Window ‚Üí Log</div><a class=\"anchorButton compact\" href=\"#helper-tools\">More about the log</a></div>"
    },
	"section-viewdialogs": {
      "caption": "üó®Ô∏è Dialog Viewer",
	  "anchor": "dialog-viewer",
      "content": "The Dialog Viewer is where the writer can see how the reader would read the story. This window can be shown or hidden by clicking on the menu item <div class=\"menuPath\">Window ‚Üí Dialog Viewer</div>. The window looks like the screenshot below.<br><br><img src=\"screenshots/dialogViewer_en.png\"/><br><br>Clicking on one of the dialog buttons selects a dialog and activates the state corresponding to that dialog."
    },
	"section-creatingdependencies": {
      "caption": "üîó Links between states",
	  "anchor": "links-states",
      "content": "Links between states are created automatically through availability expressions. Visually the links can be seen through the window <div class=\"menuPath\">Window ‚Üí States Graph</div>. The States Graph looks like the screenshot below.<br><br><img src=\"screenshots/statesGraph_en.png\"><br><br><div class=\"note\">The only way to make a connection between two states is through the availability expression because the complexity of the expression does not allow making a connection through the visual graph. The States Graph exists only for better visualization of states and the connections between them. </div>"
    },
	"section-creatingbranches": {
      "caption": "üçÉ Branches",
	  "anchor": "branches",
      "content": "A branch is a single path of activation of states. Each activation of a state is recorded in the currently active branch, creating a history log of the subsequent activation of the states. <br> <br> The system allows movement through time by rewinding or advancing states. This is done through these tools: <br><br><div class=\"menuPath\">System ‚Üí Rewind State</div>: The story rewinds one state back in history until it reaches the entry state.<br><div class=\"menuPath\">System ‚Üí Advance State</div>: The story progresses one state forward in history until it reaches the last activated state.<br><div class=\"menuPath\">System ‚Üí Time Control ‚Üí (moving the slider)</div>: The story moves to the specified position in time.<br><br>The current branch can be saved through:<br> <div class=\"menuPath\">System ‚Üí Save Branch ‚Üí (branch name) ‚Üí Confirm</div><br><br>Each named branch can be loaded, deleted or renamed using the menu items in:<br><div class=\"menuPath\">System ‚Üí Branches ‚Üí (branch name)</div>"
    },
	"section-usingadditionaltools": {
      "caption": "üõ†Ô∏è Helper tools",
	  "anchor": "helper-tools",
      "content": "All problems and errors that may occur when using the tool are listed in <div class=\"menuPath\">Window ‚Üí Log</div>. On the left is the number of such \"events\" that have occured, and on the right is the message that describes the cause of the issue. The window looks like the screenshot below. <br><br><img src=\"screenshots/logWindow_en.png\"><br><br>The Profiler is located in <div class=\"menuPath\">Window ‚Üí Profiler</div>. It monitors the program performance and it should not be used by writers and readers."
    },
	"section-tipsandtricks": {
      "caption": "‚úèÔ∏è Tips and Tricks",
	  "anchor": "tips-tricks",
      "content": "<div class=\"note\">In the <div class=\"menuPath\">availability expression</div> it is not at all necessary to use a keyboard to type the expression itself, although that is one way to do it. All tools are available by right-clicking on the edit box. Each part of the expression can be changed by selecting the part of the expression and clicking on a selection in the context menu of the right-click.</div><div class=\"note\">Wherever there is a funnel icon this means that those fields can be searched if you type a criterion in the space provided.</div><div class=\"note\">The editor theme and the language can be changed in the <div class=\"menuPath\">Settings</div> menu item.</div><div class=\"note\">Each story can be exported in .xml format that can be used elsewhere or shared through a version control system such as Perforce, Git or Subversion. In the same way stories can be edited and imported from .xml files. Importing is done through the buttons <div class=\"menuPath\">File ‚Üí Import</div>, <div class=\"menuPath\">File ‚Üí Export</div> and <div class=\"menuPath\">File ‚Üí Export As</div> </div><div class=\"note\">Each window can be moved by clicking on the small triangle in the upper left corner and dragging the title bar to the desired position.</div><div class=\"note\">Stories are stored in the same folder as <b> NSTEngine.exe </b> in the <b> stories </b> sub-folder, characters are in the <b> characters </b> sub-folder, logs in the sub the <b> logs </b> folder, and the exported XML files are in the <b> exports </b> subfolder.</div><div class=\"note\">Keyboard hotkeys: <br><br><div class=\"kbc-button\">CTRL</div><div class=\"kbc-button\">S</div> Save the story<br><div class=\"kbc-button\">CTRL</div><div class=\"kbc-button\">N</div> Create new story<br><div class=\"kbc-button\">CTRL</div><div class=\"kbc-button\">R</div> or <div class=\"kbc-button\">F5</div> Reset the story<br><div class=\"kbc-button\">CTRL</div><div class=\"kbc-button\">‚Üê</div> Rewind state<br><div class=\"kbc-button\">CTRL</div><div class=\"kbc-button\">‚Üí</div> Advance state<br><div class=\"kbc-button\">CTRL</div><div class=\"kbc-button\">SHIFT</div><div class=\"kbc-button\">DEL</div> Delete the currently selected state<br><div class=\"kbc-button\">CTRL</div><div class=\"kbc-button\">U</div> Update the selected state and the selected character<br><div class=\"kbc-button\">CTRL</div><div class=\"kbc-button\">–ê</div> Try to activate the currently selected state<br><div class=\"kbc-button\">CTRL</div><div class=\"kbc-button\">F</div> Force activate the state<br><div class=\"kbc-button\">CTRL</div><div class=\"kbc-button\">–ï</div> Make the current state be the entry state<br><div class=\"kbc-button\">CTRL</div><div class=\"kbc-button\">D</div> Create a default state</div>"
    },
	"section-wheretonext": {
      "caption": "ü§ñ What next?",
	  "anchor": "what-next",
      "content": "Join the official <a class=\"anchorButton compact\"  href=\"https://discord.gg/sxeD79nuBP\">discord server</a> or contact me on <a class=\"anchorButton compact\" href=\"mailto:deeeeelay@gmail.com\">e-mail</a> or find me on <a class=\"anchorButton compact\" href=\"https://www.instagram.com/najnajjak/\">instagram</a>! NST is developed as a thesis on non-linear systems in video games by Martin Petkovski.</div>"
    }
  }
}